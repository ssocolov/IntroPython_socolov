#######################################################################################################################
#1. Дано целое число (int). Определить сколько нулей в этом числе.
#
# my_int = str(10200300)
# symbol = "0"
# result = my_int.count(symbol)
# print(result)

#######################################################################################################################
# 2. Дано целое число (int). Определить сколько нулей в конце этого числа. Например для числа 1002000 - три нуля
#
# my_int = 100023000
# count = 0
# while my_int % 10 == 0:
#     count += 1
#     my_int //= 10
# print(count)

#######################################################################################################################
# 3. Дана строка в которой есть числа (разделяются пробелами).
# Например "43 больше чем 34 но меньше чем 56". Найти сумму ВСЕХ ЧИСЕЛ (А НЕ ЦИФР) в этой строке.
# Для данного примера ответ - 133. (используйте split и проверку isdigit)
#
# my_str = "43 больше 34 но меньше 56"
# my_list = []
# for numbers in my_str.split():
#     if numbers.isdigit():
#         my_list.append(int(numbers))
# result = sum(my_list)
# print(result)

#######################################################################################################################
# 4. Дана строка my_str в которой символы МОГУТ повторяться и два символа l_limit, r_limit,
# которые точно находятся в этой строке. Причем l_limit левее чем r_limit.
# В переменную sub_str поместить НАИБОЛЬШУЮ часть строки между этими символами.
# my_str = "My long string", l_limit = "o", r_limit = "g" -> sub_str = "ng strin".
#
# my_str = "My long string"
# new_str = str(my_str[::-1])
# l_limit = "o"
# r_limit = "g"
# sub_str = str(new_str[(new_str.index(r_limit) + 1): new_str.index(l_limit)])
# result = sub_str[::-1]
# print(result)

#######################################################################################################################
# 5. Дан список строк my_list. Создать новый список в который поместить
# элементы из my_list у которых первый символ - буква "a".
#
# my_list = ['abs', 'argo', 'gm', 'dell', 'arm', 'esp']
# new_list = []
# for symbol in my_list:
#     if symbol.startswith('a'):
#         new_list.append(symbol)
# print(new_list)

#######################################################################################################################
# 6. Дан список строк my_list. Создать новый список в который поместить
# элементы из my_list в которых есть символ - буква "a" на любом месте.
#
# my_list = ['abibas', 'cargo', 'gm', 'dell', 'calc', 'esp']
# new_list = []
# for symbol in my_list:
#     if symbol.count('a'):
#         new_list.append(symbol)
# print(new_list)

#######################################################################################################################
# 7. Дан список my_list в котором могут быть как строки (type str) так и целые числа (type int).
# Например [1, 2, 3, "11", "22", 33]
# Создать новый список в который поместить только строки из my_list.
# my_list = [1, 2, 3, "11", "22", 33]
# new_list = []
# for symbol in my_list:
#     if type(symbol) == str:
#         new_list.append(symbol)
# print(new_list)

#######################################################################################################################
# 8. Дана строка my_str. Создать список в который поместить те символы из my_str,
# которые встречаются в строке ТОЛЬКО ОДИН раз.
# my_str = "qwertyaqwerty"
# res =[]
# for symb in set (my_str):
#     if my_str.count(symb) == 1:
#         res.append(symb)
# print(res)
#




#######################################################################################################################
# 9. Даны две строки. Создать список в который поместить те символы,
# которые есть в обеих строках хотя бы раз.
#









#######################################################################################################################
# 10. Даны две строки. Создать список в который поместить те символы, которые есть в обеих строках,
# но в каждой ТОЛЬКО ПО ОДНОМУ разу.
# Пример: для строк "aaaasdf1" и "asdfff2" ответ ["s", "d"], т.к. эти символы есть в каждой строке по одному разу
#








########################################################################################################################
# 11. Дана строка my_str. Разделите эту строку на пары из двух символов и поместите эти пары в список.
# Если строка содержит нечетное количество символов, пропущенный второй символ последней пары должен
# быть заменен подчеркиванием ('_'). Примеры: 'abcd' -> ['ab', 'cd'], 'abcde' -> ['ab', 'cd', e_']
# (используйте срезы длинны 2)